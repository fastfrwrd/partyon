<div class="container">

	<article id="login_<%= party.id %>" class="new" style="margin-top:2em;" data-partyon-partyid="<%= party.id %>"<% if (user) { %> data-partyon-userid="<%= user.id %>" data-partyon-userpartyid="<%= user.partyId %>"<% } %>>
		<h3 class="title">Party On! <small class="details">a hack by Paul Marbach and Tucker Bickler</small></h3>
		<div class="row">
			<div class="offset3 span6">
				<% if(user) { %>
					<div class="well">
						<h5>You're currently logged into a different party.</h5>
						<h3>Want to switch to <strong><%= party.name %></strong>?</h3>
						<div class="button-row" style="margin-bottom: 20px">
							<button class="pull-right btn btn-large btn-primary go">Go to party</button>
							<button class="pull-left btn btn-large back">Back</button>
							<div class="clearfix"></div>
						</div>
					</div>
				<% } else { %>
					<div id="snapshot"></div>
				<% } %>
		</div>
		</div>
	</article>
</div>

<script type="text/javascript">

$(function() {
	var partyId = $('article.new').attr('data-partyon-partyid'),
		userId = $('article.new').attr('data-partyon-userid'),
		userPartyId = $('article.new').attr('data-partyon-userpartyid');

	if(userId) {
		$('.go').click(function(ev) {
			ev.preventDefault();
			$.post('/user/switchParty/' + partyId, function(status) {
				window.location.reload();
			});
		});

		$('.back').click(function(ev) {
			ev.preventDefault();
			$.getJSON('/party/' + userPartyId, function(data) {
				window.location = '/p/' + data.uri;
			});
		});
	} else {
		Mast.registerComponent('snapshot', {
			template : '.snapshot',
			outlet: '#snapshot',
			events : {
				'click .take' : 'take',
				'click .upload' : 'upload',
				'click .retake' : 'afterRender',
				'click .take-picture' : 'triggerCamera',
				'change .camera' : 'usePicture'
			},

			afterRender : function() {
				Mast.isMobile ? this.setupMobile() : this.setupDesktop()
			},

			setupMobile : function(ev) {
				this.$('.view').hide();
				this.$('.previewMobile').show();
			},

			triggerCamera : function(ev) {
				this.$('.camera').trigger('click');
			},

			usePicture : function(ev) {
				var self = this,
					file = ev.target.files[0],
					img = document.createElement("img"),
					reader = new FileReader();
				reader.onload = function(RADURL) {
					img.src = RADURL.target.result;
			    	self.$('.previewMobile').hide();
			    	setTimeout(function() {
						self.showCropTool($(img), img.naturalWidth, img.naturalHeight);
			    	}, 0);
				}
				reader.readAsDataURL(file);
			},

			take : function(ev) {
				var $video = this.$('.preview video')
		    	this.showCropTool($video, $video.width(), $video.height());
			},

			showCropTool : function($image, width, height) {

				var self = this;
				var $canvas = this.$('.view canvas'),
		    		ctx = $canvas.get(0).getContext('2d');

		    	$canvas.attr({
		    		'height': height,
		    		'width': width
		    	});
		    	ctx.drawImage($image.get(0), 0, 0, width, height);
		    	var shorterSide = _.min([width, height]);

		    	this.crop = (width === shorterSide)
					? { 
						x: 0, 
						y: (height - shorterSide) / 2, 
						x2: width, 
						y2: (height + shorterSide) / 2, 
						w: shorterSide, 
						h: shorterSide 
					}
					: {
						x: (width - shorterSide) / 2,
						y: 0,
						x2: (width + shorterSide) / 2,
						y2: height,
						w: shorterSide,
						h: shorterSide
					};

		    	this.$('.preview').hide();
		    	this.$('.view').show();
		   		
		   		$canvas.parent().css({
		   			'height' : $canvas.height(),
		   			'width' : $canvas.width()
		   		}).Jcrop({
		   			allowResize: false,
		   			allowMove: true,
		   			aspectRatio: 1,
		   			setSelect: [this.crop.x,this.crop.y,this.crop.x2,this.crop.y2],
		   			bgColor: 'transparent',
		   			onSelect: function(crop) {
		   				self.crop = crop;
		   			}
		   		});
			},

			setupDesktop : function(ev) {
				navigator.enabled = true;
				navigator.getMedia = ( navigator.getUserMedia ||
	                         navigator.webkitGetUserMedia ||
	                         //navigator.mozGetUserMedia ||
	                         navigator.msGetUserMedia);

				if(navigator.getMedia) {
					navigator.getMedia({
						'video' : true
					}, function(stream) {
						var video = this.$('.preview video').get(0);
						if (navigator.mozGetUserMedia) video.mozSrcObject = stream;
						else {
							var vendorURL = window.URL || window.webkitURL;
							video.src = vendorURL.createObjectURL(stream);
						}
						this.$('.preview').show();
						video.play();
					}, function(err) { console.log("error", err); });
				} else {
					// photo upload
					this.$('.upload').show();
				}

		    	this.$('.view').hide();
			},

			upload : function(ev) {
				var $canvas = this.$('.view canvas'),
					$tempCanvas = $('<canvas />')
						.attr({
							'width' : this.crop.w,
							'height' : this.crop.h
						}),
					ctx = $tempCanvas.get(0).getContext('2d'),
					partyId = $('.new').attr('data-partyon-partyid');

				ctx.drawImage($canvas.get(0), this.crop.x, this.crop.y, this.crop.w, this.crop.h, 0, 0, this.crop.w, this.crop.h);
				
				$.post('/user/uploadPhoto', {data:$tempCanvas.get(0).toDataURL(), partyId:partyId}, function(data, status) {
					window.location.reload();
				});
			}
		});
		
		var app = {};

		Mast.routes.index = function(query, page) {
			app.snapshot = new Mast.components.snapshot();
		}		
	}
	
	Mast.raise({
		socket: false
	});

});
</script>
