<div class="container">

	<article id="login_<%= party.id %>" class="new" style="margin-top:2em;" data-partyon-partyid="<%= party.id %>">
		<h3 class="title">Party On! <small class="details">a hack by Paul Marbach and Tucker Bickler</small></h3>
		<div class="row">
			<div class="offset3 span6">
				<% if(user) { %>
					<div class="well">
						<h5>You're currently logged into a different party.</h5>
						<h3>Want to switch to <strong><%= party.name %></strong>?</h3>
						<div class="button-row" style="margin-bottom: 20px">
							<button class="pull-right btn btn-large btn-primary go">Go to party</button>
							<button class="pull-left btn btn-large back">Back</button>
							<div class="clearfix"></div>
						</div>
					</div>
				<% } else { %>
					<div id="snapshot"></div>
				<% } %>
		</div>
		</div>
	</article>
</div>

<script type="text/javascript">

$(function() {
	<% if(user) { %>
	$('.go').click(function(ev) {
		ev.preventDefault();
		$.post('/user/switchParty/', {id:$('.new').attr('data-partyon-partyid')}, function(data) {
			window.location.reload();
		});
	});

	$('.back').click(function(ev) {
		ev.preventDefault();
		window.location = '/party/<%= user.partyId %>/view';
	});

	<% } else { %>
	var Snapshot = Backbone.View.extend({
		el : $('#snapshot'),
		template : Templates.snapshot,
		events : {
			'click .take' : 'take',
			'click .upload' : 'upload',
			'click .retake' : 'setup'
		},

		take : function(ev) {
			var self = this;
			var $video = this.$('.preview video'),
	    		$canvas = this.$('.view canvas'),
	    		ctx = $canvas.get(0).getContext('2d');

	    	$canvas.attr({
	    		'height': $video.height(),
	    		'width': $video.width()
	    	});

	    	ctx.drawImage($video.get(0), 0, 0, $video.width(), $video.height());
	    	var shorterSide = _.min([$video.width(), $video.height()]);

	    	this.crop = ($video.width() === shorterSide)
				? { 
					x: 0, 
					y: ($video.height() - shorterSide) / 2, 
					x2: $video.width(), 
					y2: ($video.height() + shorterSide) / 2, 
					w: shorterSide, 
					h: shorterSide 
				}
				: {
					x: ($video.width() - shorterSide) / 2,
					y: 0,
					x2: ($video.width() + shorterSide) / 2,
					y2: $video.height(),
					w: shorterSide,
					h: shorterSide
				};

	    	this.$('.preview').hide();
	    	this.$('.view').show();
	   		
	   		$canvas.parent().css({
	   			'height' : $canvas.height(),
	   			'width' : $canvas.width()
	   		}).Jcrop({
	   			allowResize: false,
	   			allowMove: true,
	   			aspectRatio: 1,
	   			setSelect: [this.crop.x,this.crop.y,this.crop.x2,this.crop.y2],
	   			bgColor: 'transparent',
	   			onSelect: function(crop) {
	   				self.crop = crop;
	   			}
	   		});
		},

		setup : function(ev) {
			navigator.enabled = true;
			navigator.getMedia = ( navigator.getUserMedia ||
                         navigator.webkitGetUserMedia ||
                         //navigator.mozGetUserMedia ||
                         navigator.msGetUserMedia);

			if(navigator.getMedia) {
				navigator.getMedia({
					'video' : true
				}, function(stream) {
					var video = this.$('.preview video').get(0);
					if (navigator.mozGetUserMedia) video.mozSrcObject = stream;
					else {
						var vendorURL = window.URL || window.webkitURL;
						video.src = vendorURL.createObjectURL(stream);
					}
					this.$('.preview').show();
					video.play();
				}, function(err) { console.log("error", err); });
			} else {
				// photo upload
				this.$('.upload').show();
			}

	    	this.$('.view').hide();
		},

		upload : function(ev) {
			var $canvas = this.$('.view canvas'),
				$tempCanvas = $('<canvas />')
					.attr({
						'width' : this.crop.w,
						'height' : this.crop.h
					}),
				ctx = $tempCanvas.get(0).getContext('2d'),
				partyId = $('.new').attr('data-partyon-partyid');

			ctx.drawImage($canvas.get(0), this.crop.x, this.crop.y, this.crop.w, this.crop.h, 0, 0, this.crop.w, this.crop.h);
			
			$.post('/user/uploadPhoto', {data:$tempCanvas.get(0).toDataURL(), partyId:partyId}, function(data, status) {
				window.location.reload();
			});
		},

		render : function() {
			this.$el.append(this.template.render());
			this.setup();
			return this;
		}
	});

	var snapshot = new Snapshot();
	snapshot.render();
	<% } %>
});
</script>
