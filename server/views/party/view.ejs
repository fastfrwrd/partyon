<article class="queue" id="party_<%= party.id %>" data-partyon-partyid="<%= party.id %>">
	<h3 class="title"><%= party.name %>
		<small class="details"><%= party.tracks.length %> tracks &bull; <%=: party.users.length %> guests</small>
	</h3>
	<form class="search">
		<input type="text" class="sp-search input-xlarge">
	</form>
	<ul id="queue_list" class="list"></ul>
</article>

<div id="templates" class="hide"></div>

<script type="text/javascript">
(function() {
	$('#templates').append($('<div />').attr('id','queue_item').html(Templates.queueItem));

	Mast.registerComponent('TrackListItem', {
		template : '#queue_item',
		model : "Track",
	  	outlet : '#queue_list',
	  	subscriptions: {
			'~track/create': function (id, data) {
				console.log(id, data);
				this.model.set(data);
				this.render();
			}
		}
	});

	Mast.registerCollection('PartyTracks', {
		url : '/party/' + $('.queue').attr('data-partyon-partyid') + '/tracks'
	});

	Mast.registerTree('PartyTracksList',{
	    collection : 'PartyTracks',
	    branchComponent : 'TrackListItem',
	    init: function(){
	        this.collection.fetch();
	    }
	});

	Mast.raise({
	    baseUrl: 'http://localhost:1337'
	});

	$(function() {
		// autocomplete setup
		$('.sp-search').autocomplete({
			source: function(req, res) {
				$.getJSON("http://ws.spotify.com/search/1/track.json?q=" + req.term, function(data) {
					res(_.map(_.first(data.tracks, 5), function(track) {
						if(track.artists.length > 0) track.artists[0].first = true;

						return track;
					}));
				});
			},
			select: function(ev, ui) {
				var track = new Mast.models.Track({
					trackUri : ui.item.href,
					title : ui.item.name,
					artist : _.pluck(ui.item.artists, 'name').join(', '),
					partyId : $(ev.target).closest('article').attr('data-partyon-partyid'),
					votes : 1
				});
				track.save({}, {
					success:function(model) {
						// update here!
					},
					error: function() {
						console.error('error adding track', arguments);
					}
				});
			}
		}).data( "ui-autocomplete" )._renderItem = function( ul, item ) {
			return $( "<li>" )
				.append( Templates.spotifyItem.render(item) )
				.appendTo( ul );
		};
	});
})();
</script>